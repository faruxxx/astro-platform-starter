{
  "recommendations": ["astro-build.astro-vscode"],
  "unwantedRecommendations": []
}
#!/usr/bin/env bash
set -euo pipefail
BASE_DIR="$PWD/mytouchpoint-starter"
echo "Création du projet dans $BASE_DIR"
rm -rf "$BASE_DIR"
mkdir -p "$BASE_DIR"

# package.json
cat > "$BASE_DIR/package.json" <<'JSON'
{ "name":"mytouchpoint-starter", "version":"0.1.0", "description":"Starter backend for MyTouchPoint (Express + TypeScript)", "main":"dist/index.js", "scripts": { "dev":"ts-node-dev --respawn --transpile-only src/index.ts", "build":"tsc", "start":"node dist/index.js", "migrate":"node ./scripts/run_migrations.js" }, "dependencies": { "bcrypt":"^5.1.0", "body-parser":"^1.20.2", "cors":"^2.8.5", "dotenv":"^16.3.1", "express":"^4.18.2", "jsonwebtoken":"^9.0.1", "pg":"^8.11.0", "uuid":"^9.0.0" }, "devDependencies": { "@types/express":"^4.17.17", "@types/jsonwebtoken":"^9.0.2", "@types/node":"^20.5.1", "ts-node-dev":"^2.0.0", "typescript":"^5.2.2" } }
JSON

# tsconfig.json
cat > "$BASE_DIR/tsconfig.json" <<'JSON'
{
  "compilerOptions": {
    "target": "ES2020",
    "module": "CommonJS",
    "outDir": "dist",
    "rootDir": "src",
    "strict": true,
    "esModuleInterop": true,
    "skipLibCheck": true
  }
}
JSON

# .env.example
cat > "$BASE_DIR/.env.example" <<'ENV'
# Copy to .env and set values
PORT=4000
DATABASE_URL=postgresql://postgres:postgres@postgres:5432/mytouchpoint
JWT_SECRET=change_this_secret
PROVIDER_SECRET=provider_secret_example
ENV

# docker-compose.yml
cat > "$BASE_DIR/docker-compose.yml" <<'YAML'
version: '3.8'
services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mytouchpoint
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
  backend:
    build: ./ 
    command: sh -c "npm install && npm run migrate && npm run dev"
    volumes:
      - ./:/usr/src/app
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/mytouchpoint
      - PORT=4000
      - JWT_SECRET=change_this_secret
      - PROVIDER_SECRET=provider_secret_example
    ports:
      - "4000:4000"
    depends_on:
      - postgres
volumes:
  pgdata:
YAML

# README.md
cat > "$BASE_DIR/README.md" <<'MD'
# MyTouchPoint - Starter Backend (Express + TypeScript)

Contenu :
- Express + TypeScript starter
- Postgres migrations (simple SQL)
- Basic endpoints: register, login, catalog, transactions/initiate, webhooks/provider
- Docker Compose example to run Postgres + backend in dev mode

## Quick start (local)

1. Copier `.env.example` en `.env` et adapter.
2. Démarrer Postgres (par ex. avec Docker Compose):
   ```bash
   docker-compose up -d